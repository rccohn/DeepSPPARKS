# !/bin/bash

# either run ./container build, delete, or run
CNAME="rccohn/deepsppark-worker:latest"
SOURCE_ROOT="../../" # directory contains spparks2graph source code, and setup.py

ATTACH=0
EXTRA_ARGS=()

while [[ $# -gt 0 ]]; 
do
	case $1 in
		-b | --build | build)
        # build container with default arguments
        
        # since docker can't take files from outside of build context, 
        # we have to copy them first.
        # to prevent using an older version of spparks2graph, 
        # the files are deleted after the container is built
		echo "building container"
		echo "copying dependencies"
		cp -r ${SOURCE_ROOT}/deepsppark .
		cp ${SOURCE_ROOT}/setup.py .
		docker build -t ${CNAME} .
		echo "removing temp files"
		rm -rf deepsppark
		rm setup.py
		shift
		;;
		-d| --delete | delete)
		echo "deleting container"
		docker rmi --force ${CNAME} 
		shift
		;;
		-r | --run | run)
		echo "running container with GPU (use -R to run without GPU)"
		CID=$(docker run --rm --gpus=all -itd --name worker-base  ${CNAME})
		shift
		;;
		-R | --Run | Run)
		echo "running container without GPU (use -r to run with GPU)"
		CID=$(docker run --rm --gpus=all -itd --name worker-base  ${CNAME})
		shift
		;;
		-a)
		# attach container after running
		echo 
        ATTACH=1
		shift
		;;
		*)
		EXTRA_ARGS+=("$1")
		shift
		;;
		esac
done

if [ $ATTACH -eq 1 ]
then
    if [ ! -z $CID ]
    then
        docker attach $CID
    else
        echo "no container started, use -ra or -Ra to run and attach container"
    fi
fi
    
